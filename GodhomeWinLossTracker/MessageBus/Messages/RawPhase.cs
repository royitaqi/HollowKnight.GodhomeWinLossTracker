using GodhomeWinLossTracker.Utils;

namespace GodhomeWinLossTracker.MessageBus.Messages
{
    public class RawPhase : IMessage
    {
        public RawPhase(string timestamp, string sequenceName, string bossName, string sceneName, int phase, int heals, int healAmount, int hits, int hitAmount, long timeSpentMs, RecordSources recordSource)
        {
            DevUtils.Assert(timestamp!= null, "timestamp shouldn't be null");
            DevUtils.Assert(sequenceName != null, "sequenceName shouldn't be null");
            DevUtils.Assert(bossName != null, "bossName shouldn't be null");
            DevUtils.Assert(sceneName != null, "sceneName shouldn't be null");

            Timestamp = timestamp;
            SequenceName = sequenceName;
            BossName = bossName;
            SceneName = sceneName;
            Phase = phase;
            Heals = heals;
            HealAmount = healAmount;
            Hits = hits;
            HitAmount = hitAmount;
            TimeSpentMs = timeSpentMs;
            RecordSource = recordSource;
        }

        public override string ToString()
        {
            DevUtils.Assert(RecordSource == RecordSources.Mod || RecordSource == RecordSources.Test, "Only records generated by mod can be displayed");
            string msg = $"{BossName} phase {Phase} lasted {TimeSpentMs / 1000} seconds";
            return msg;
        }

        public string Timestamp { get; private set; }
        public string SequenceName { get; private set; }
        public string BossName { get; private set; }
        public string SceneName { get; private set; }
        public int Phase { get; private set; }
        public int Heals { get; private set; }
        public int HealAmount { get; private set; }
        public int Hits { get; private set; }
        public int HitAmount { get; private set; }
        public long TimeSpentMs { get; private set; } // The amount of time spent in this phase
        public RecordSources RecordSource { get; private set; }
    }
}
