using System;
using System.Collections.Generic;
using System.Diagnostics;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace GodhomeWinLossTracker.MessageBus.Messages
{
    public class RawWinLoss : IMessage
    {
        public enum Sources : int
        {
            Manual = 0,
            Mod = 1,
        }

        public RawWinLoss(string sequenceName, string bossName, string sceneName, bool winLoss, long fightLengthMs, Sources source)
        {
            DevUtils.Assert(sequenceName != null, "sequenceName shouldn't be null");
            DevUtils.Assert(bossName != null, "bossName shouldn't be null");
            DevUtils.Assert(sceneName != null, "sceneName shouldn't be null");

            Timestamp = DateTime.Now.ToString("yyyy'-'MM'-'dd HH':'mm':'ss");

            SequenceName = sequenceName;
            BossName = bossName;
            SceneName = sceneName;
            Wins = winLoss ? 1 : 0;
            Losses = winLoss ? 0 : 1;
            FightLengthMs = fightLengthMs;
            Source = source;
        }

        public override string ToString()
        {
            DevUtils.Assert(Source == Sources.Mod, "Only records generated by mod can be displayed");
            DevUtils.Assert((Wins == 1 && Losses == 0) || (Wins == 0 && Losses == 1), "Records generated by mod should only have one win or one loss");
            string verb = Wins == 1 ? "Won" : "Lost to";
            return $"{verb} {BossName} in {SequenceName}";
        }

        public string Timestamp { get; private set; }
        public string SequenceName { get; private set; }
        public string BossName { get; private set; }
        public string SceneName { get; private set; }
        public int Wins { get; private set; }
        public int Losses { get; private set; }
        public long FightLengthMs { get; private set; }
        public Sources Source { get; private set; }
    }
}
